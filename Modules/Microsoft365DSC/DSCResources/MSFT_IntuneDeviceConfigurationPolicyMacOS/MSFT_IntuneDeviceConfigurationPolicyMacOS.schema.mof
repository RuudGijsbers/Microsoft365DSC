[ClassVersion("1.0.0")]
class MSFT_DeviceManagementApplicabilityRuleOsEdition
{
    [Write, Description("Applicability rule OS edition type"),ValueMap{"0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19"}, Values{"Windows10Enterprise","Windows10EnterpriseN","Windows10Education","Windows10EducationN","Windows10MobileEnterprise","Windows10HolographicEnterprise","Windows10Professional","Windows10ProfessionalN","Windows10ProfessionalEducation","Windows10ProfessionalEducationN","Windows10ProfessionalWorkstation","Windows10ProfessionalWorkstationN","NotConfigured","Windows10Home","Windows10HomeChina","Windows10HomeN","Windows10HomeSingleLanguage","Windows10Mobile","Windows10IoTCore","Windows10IoTCoreCommercial"}] String OsEditionTypes[];
    [Write, Description("Name for object")] String Name[];
    [Write, Description("Applicability Rule type. Possible values are: include, exclude"),ValueMap{"0","1"}, Values{"include","exclude"}] String RuleType;
};

[ClassVersion("1.0.0")]
class MSFT_DeviceManagementApplicabilityRuleOsVersion
{
    [Write, Description("Min OS version for Applicability Rule")] String MinOSVersion;
    [Write, Description("Max OS version for Applicability Rule")] String MaxOSVersion;
    [Write, Description("Name for object.")] String Name;
    [Write, Description("Applicability Rule type. Possible values are: include, exclude"),ValueMap{"0","1"}, Values{"include","exclude"}] String RuleType;
};

[ClassVersion("1.0.0")]
class MSFT_DeviceManagementApplicabilityRuleDeviceMode
{
    [Write, Description("Applicability rule for device mode. Possible values are: standardConfiguration, sModeConfiguration"),ValueMap{"0","1"}, Values{"StandardConfiguration","SModeConfiguration"}] String DeviceMode;
    [Write, Description("The Store URL of the application")] String Name;
    [Write, Description("Applicability Rule type. Possible values are: include, exclude"),ValueMap{"0","1"}, Values{"include","exclude"}] String ruleType;
};

[ClassVersion("1.0.0")]
class MSFT_AppListItem
{
    [Write, Description("The application name")] String Name;
    [Write, Description("The publisher of the application")] String Publisher;
    [Write, Description("The Store URL of the application")] String AppStoreUrl;
    [Write, Description("The application or bundle identifier of the application.")] String AppId;
};

[ClassVersion("1.0.0.0"), FriendlyName("IntuneDeviceConfigurationPolicyMacOS")]
class MSFT_IntuneDeviceConfigurationPolicyMacOS : OMI_BaseResource
{
    [Write, Description("Admin provided name of the device configuration")] String DisplayName;
    [Write, Description("Admin provided description of the Device Configuration.")] String Description;
    [Write, Description("The device mode applicability rule for this Policy"),EmbeddedInstance("MSFT_DeviceManagementApplicabilityRuleOsVersion")] String DeviceManagementApplicabilityRuleDeviceMode[];
    [Write, Description("The OS edition applicability for this Policy"),EmbeddedInstance("MSFT_DeviceManagementApplicabilityRuleOsEdition")] String DeviceManagementApplicabilityRuleOsEdition[];
    [Write, Description("The OS version applicability rule for this Policy"),EmbeddedInstance("MSFT_DeviceManagementApplicabilityRuleDeviceMode")] String DeviceManagementApplicabilityRuleOsVersion[];
    [Write, Description("List of Scope Tags for this Entity instance")] String RoleScopeTagIds[];
    [Write, Description("Yes prevents users from adding friends to Game Center. Available for devices running macOS versions 10.13 and later")] Boolean AddingGameCenterFriendsBlocked;
    [Write, Description("Indicates whether or not to allow AirDrop")] Boolean AirDropBlocked;
    [Write, Description("Indicates whether or to block users from unlocking their Mac with Apple Watch")] Boolean AppleWatchBlockAutoUnlock;
    [Write, Description("Indicates whether or not to block the user from accessing the camera of the device")] Boolean CameraBlocked;
    [Write, Description("Indicates whether or not to allow remote screen observation by Classroom app. Requires MDM enrollment via Apple School Manager or Apple Business Manager")] Boolean ClassroomAppBlockRemoteScreenObservation;
    [Write, Description("Indicates whether or not to automatically give permission to the teacher of a managed course on the Classroom app to view a student's screen without prompting. Requires MDM enrollment via Apple School Manager or Apple Business Manager")] Boolean ClassroomAppForceUnpromptedScreenObservation;
    [Write, Description("Indicates whether or not to automatically give permission to the teacher's requests, without prompting the student. Requires MDM enrollment via Apple School Manager or Apple Business Manager")] Boolean ClassroomForceAutomaticallyJoinClasses;
    [Write, Description("Indicates whether a student enrolled in an unmanaged course via Classroom will be required to request permission from the teacher when attempting to leave the course. Requires MDM enrollment via Apple School Manager or Apple Business Manager")] Boolean ClassroomForceRequestPermissionToLeaveClasses;
    [Write, Description("Indicates whether or not to allow the teacher to lock apps or the device without prompting the student. Requires MDM enrollment via Apple School Manager or Apple Business Manager")] Boolean ClassroomForceUnpromptedAppAndDeviceLock;
    [Write, Description("List that is in the CompliantAppsList. Possible values are: none, appsInListCompliant, appsNotInListCompliant"),ValueMap{"0","1","2"}, Values{"none","appsInListCompliant","appsNotInListCompliant"}] String CompliantAppListType;
    [Write, Description("List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements"),EmbeddedInstance("MSFT_AppListItem")] String CompliantAppsList[];
    [Write, Description("Indicates whether or not to allow content caching")] Boolean ContentCachingBlocked;
    [Write, Description("Indicates whether or not to block definition lookup")] Boolean DefinitionLookupBlocked;
    [Write, Description("An email address lacking a suffix that matches any of these strings will be considered out-of-domain.")] String EmailInDomainSuffixes[];
    [Write, Description("TRUE disables the reset option on supervised devices. FALSE enables the reset option on supervised devices. Available for devices running macOS versions 12.0 and later")] Boolean EraseContentAndSettingsBlocked;
    [Write, Description("Yes disables Game Center, and the Game Center icon is removed from the Home screen. Available for devices running macOS versions 10.13 and later")] Boolean GameCenterBlocked;
    [Write, Description("Indicates whether or not to block the user from continuing work that they started on a MacOS device on another iOS or MacOS device (MacOS 10.15 or later)")] Boolean ICloudBlockActivityContinuation;
    [Write, Description("Indicates whether or not to block iCloud from syncing contacts")] Boolean ICloudBlockAddressBook;
    [Write, Description("Indicates whether or not to block iCloud from syncing bookmarks")] Boolean ICloudBlockBookmarks;
    [Write, Description("Indicates whether or not to block iCloud from syncing calendars")] Boolean ICloudBlockCalendar;
    [Write, Description("Indicates whether or not to block iCloud document sync")] Boolean ICloudBlockDocumentSync;
    [Write, Description("Indicates whether or not to block iCloud from syncing mail")] Boolean ICloudBlockMail;
    [Write, Description("Indicates whether or not to block iCloud from syncing notes")] Boolean ICloudBlockNotes;
    [Write, Description("Indicates whether or not to block iCloud Photo Library")] Boolean ICloudBlockPhotoLibrary;
    [Write, Description("Indicates whether or not to block iCloud from syncing reminders")] Boolean ICloudBlockReminders;
    [Write, Description("Indicates whether or not to block files from being transferred using iTunes")] Boolean ITunesBlockFileSharing;
    [Write, Description("Indicates whether or not to block Music service and revert Music app to classic mode.")] Boolean ITunesBlockMusicService;
    [Write, Description("Indicates whether or not to block the user from using dictation input")] Boolean KeyboardBlockDictation;
    [Write, Description("Indicates whether or not iCloud keychain synchronization is blocked (macOS 10.12 and later)")] Boolean KeychainBlockCloudSync;
    [Write, Description("TRUE prevents multiplayer gaming when using Game Center. FALSE allows multiplayer gaming when using Game Center. Available for devices running macOS versions 10.13 and later")] Boolean MultiplayerGamingBlocked;
    [Write, Description("Indicates whether or not to block sharing passwords with the AirDrop passwords feature")] Boolean PasswordBlockAirDropSharing;
    [Write, Description("Indicates whether or not to block the AutoFill Passwords feature")] Boolean PasswordBlockAutoFill;
    [Write, Description("Indicates whether or not to block fingerprint unlock")] Boolean PasswordBlockFingerprintUnlock;
    [Write, Description("Indicates whether or not to allow passcode modificatio")] Boolean PasswordBlockModification;
    [Write, Description("Indicates whether or not to block requesting passwords from nearby devices")] Boolean PasswordBlockProximityRequests;
    [Write, Description("Block simple passwords")] Boolean PasswordBlockSimple;
    [Write, Description("Number of days before the password expires")] UInt32 PasswordExpirationDays;
    [Write, Description("The number of allowed failed attempts to enter the passcode at the device's lock screen. Valid values 2 to 11")] UInt32 PasswordMaximumAttemptCount;
    [Write, Description("Number of character sets a password must contain. Valid values 0 to 4")] UInt32 PasswordMinimumCharacterSetCount;
    [Write, Description("Minimum length of passwords")] UInt32 PasswordMinimumLength;
    [Write, Description("Minutes of inactivity required before a password is required")] UInt32 PasswordMinutesOfInactivityBeforeLock;
    [Write, Description("Minutes of inactivity required before the screen times out")] UInt32 PasswordMinutesOfInactivityBeforeScreenTimeout;
    [Write, Description("The number of minutes before the login is reset after the maximum number of unsuccessful login attempts is reached")] UInt32 PasswordMinutesUntilFailedLoginReset;
    [Write, Description("Number of previous passwords to block")] UInt32 PasswordPreviousPasswordBlockCount;
    [Write, Description("Whether or not to require a password.")] Boolean PasswordRequired;
    [Write, Description("Type of password that is required. Possible values are: deviceDefault, alphanumeric, numeric."),ValueMap{"0","1","2"}, Values{"deviceDefault","alphanumeric","numeric"}] String PasswordRequiredType;
    [Write, Description("List of privacy preference policy controls. This collection can contain a maximum of 10000 elements")] String PrivacyAccessControls[];
    [Write, Description("Indicates whether or not to block the user from using Auto fill in Safari")] Boolean SafariBlockAutofill;
    [Write, Description("Indicates whether or not to block the user from taking Screenshots")] Boolean ScreenCaptureBlocked;
    [Write, Description("Specify the number of days (1-90) to delay visibility of major OS software updates. Available for devices running macOS versions 11.3 and later. Valid values 0 to 90")] UInt32 SoftwareUpdateMajorOSDeferredInstallDelayInDays;
    [Write, Description("Specify the number of days (1-90) to delay visibility of minor OS software updates. Available for devices running macOS versions 11.3 and later. Valid values 0 to 90")] UInt32 SoftwareUpdateMinorOSDeferredInstallDelayInDays;
    [Write, Description("Specify the number of days (1-90) to delay visibility of non-OS software updates. Available for devices running macOS versions 11.3 and later. Valid values 0 to 90")] UInt32 SoftwareUpdateNonOSDeferredInstallDelayInDays;
    [Write, Description("Sets how many days a software update will be delyed for a supervised device. Valid values 0 to 90")] UInt32 SoftwareUpdatesEnforcedDelayInDays;
    [Write, Description("Indicates whether or not to block Spotlight from returning any results from an Internet search")] Boolean SpotlightBlockInternetResults;
    [Write, Description("Determines whether to delay OS and/or app updates for macOS. Possible values are: none, delayOSUpdateVisibility, delayAppUpdateVisibility, unknownFutureValue, delayMajorOsUpdateVisibility"),ValueMap{"0","1","2","3","4"}, Values{"none","delayOSUpdateVisibility","delayAppUpdateVisibility","unknownFutureValue","delayMajorOsUpdateVisibility"}] String UpdateDelayPolicy;
    [Write, Description("TRUE prevents the wallpaper from being changed. FALSE allows the wallpaper to be changed. Available for devices running macOS versions 10.13 and later")] Boolean WallpaperModificationBlocked;
    [Write, Description("Present ensures the policy exists, absent ensures it is removed"), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("Credentials of the Intune Admin"), EmbeddedInstance("MSFT_Credential")] String Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication.")] String ApplicationSecret;
    [Write, Description("CertificateThumbprint of the Azure Active Directory tenant used for authentication.")] String CertificateThumbprint;
};
